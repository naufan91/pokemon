{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/PokemonContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonContainer extends Component {\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          id = _this$props$match$par.id,\n          from = _this$props$match$par.from,\n          idx = _this$props$match$par.idx;\n\n    if (!this.props.isFetched) {\n      this.props.getPokemonList().then(() => {\n        return this.props.getPokemonDetails(id, from, idx);\n      });\n    }\n\n    return this.props.getPokemonDetails(id, from, idx);\n  }\n\n  render() {\n    const _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          detailsFetched = _this$props.detailsFetched,\n          error = _this$props.error;\n    const from = this.props.match.params.from;\n    console.log(detailsFetched);\n    return React.createElement(PokemonCard, {\n      isLoading: isLoading,\n      failed: error,\n      detailsFetched: detailsFetched,\n      useCatch: from === 'owned' ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.pokemon.isLoading,\n  detailsFetched: state.pokemon.detailsFetched,\n  error: state.pokemon.error,\n  isFetched: state.pokemon.isFetched\n});\n\nconst mapDispatchToProps = {\n  getPokemonDetails,\n  getPokemonList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PokemonContainer));","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/PokemonContainer.js"],"names":["React","Component","withRouter","PokemonCard","getPokemonDetails","getPokemonList","connect","PokemonContainer","componentDidMount","props","match","params","id","from","idx","isFetched","then","render","isLoading","detailsFetched","error","console","log","mapStateToProps","state","pokemon","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,kBAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACrCO,EAAAA,iBAAiB,GAAG;AAAA,kCACQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADzB;AAAA,UACRC,EADQ,yBACRA,EADQ;AAAA,UACLC,IADK,yBACLA,IADK;AAAA,UACAC,GADA,yBACAA,GADA;;AAEhB,QAAG,CAAC,KAAKL,KAAL,CAAWM,SAAf,EAAyB;AACrB,WAAKN,KAAL,CAAWJ,cAAX,GAA4BW,IAA5B,CAAiC,MAAI;AACjC,eAAO,KAAKP,KAAL,CAAWL,iBAAX,CAA6BQ,EAA7B,EAAgCC,IAAhC,EAAqCC,GAArC,CAAP;AACH,OAFD;AAGH;;AACD,WAAO,KAAKL,KAAL,CAAWL,iBAAX,CAA6BQ,EAA7B,EAAgCC,IAAhC,EAAqCC,GAArC,CAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKR,KAD7C;AAAA,UACGS,SADH,eACGA,SADH;AAAA,UACcC,cADd,eACcA,cADd;AAAA,UAC8BC,KAD9B,eAC8BA,KAD9B;AAAA,UAEGP,IAFH,GAEY,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,MAF7B,CAEGE,IAFH;AAGLQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,WACI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAGD,SADhB;AAEI,MAAA,MAAM,EAAGE,KAFb;AAGI,MAAA,cAAc,EAAID,cAHtB;AAII,MAAA,QAAQ,EAAIN,IAAI,KAAK,OAAT,GAAiB,KAAjB,GAAuB,IAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAtBoC;;AAyBzC,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,SAAS,EAAEM,KAAK,CAACC,OAAN,CAAcP,SADO;AAEhCC,EAAAA,cAAc,EAAEK,KAAK,CAACC,OAAN,CAAcN,cAFE;AAGhCC,EAAAA,KAAK,EAAEI,KAAK,CAACC,OAAN,CAAcL,KAHW;AAIhCL,EAAAA,SAAS,EAAES,KAAK,CAACC,OAAN,CAAcV;AAJO,CAAZ,CAAxB;;AAOA,MAAMW,kBAAkB,GAAG;AACvBtB,EAAAA,iBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeC,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CxB,UAAU,CAACK,gBAAD,CAAtD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonContainer extends Component {\n    componentDidMount() {\n        const { id,from,idx } = this.props.match.params\n        if(!this.props.isFetched){\n            this.props.getPokemonList().then(()=>{\n                return this.props.getPokemonDetails(id,from,idx)\n            });\n        } \n        return this.props.getPokemonDetails(id,from,idx);\n    }\n\n    render() {\n        const { isLoading, detailsFetched, error } = this.props;\n        const { from } = this.props.match.params;\n        console.log(detailsFetched);\n        return (\n            <PokemonCard \n                isLoading ={isLoading}\n                failed ={error}\n                detailsFetched = {detailsFetched}\n                useCatch = {from === 'owned'?false:true}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.pokemon.isLoading,\n    detailsFetched: state.pokemon.detailsFetched,\n    error: state.pokemon.error,\n    isFetched: state.pokemon.isFetched\n})  \n\nconst mapDispatchToProps = {\n    getPokemonDetails,\n    getPokemonList\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(PokemonContainer))"]},"metadata":{},"sourceType":"module"}