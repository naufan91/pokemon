{"ast":null,"code":"import _defineProperty from \"/Users/naufanharish/react/pokemon/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { STORE_TYPE } from '../../constants';\nconst initialState = {\n  pokemonList: [],\n  myPokemon: [],\n  selectedPokemon: {\n    forms: [],\n    abilities: [],\n    stats: [],\n    moves: [],\n    sprites: {},\n    held_items: [],\n    species: {},\n    game_indices: [],\n    types: []\n  },\n  isLoading: false,\n  offset: 0,\n  error: null,\n  isFetched: false,\n  detailsFetched: false,\n  isCatched: null,\n  catchedPokeIDX: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case STORE_TYPE.GET_ALL_POKEMON_REQUESTING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: null\n      });\n\n    case STORE_TYPE.GET_ALL_POKEMON_SUCCESS:\n      return _objectSpread({}, state, {\n        pokemonList: state.pokemonList.concat(action.payload.results.map(item => {\n          return {\n            id: item.url.substring(34, item.url.length - 1),\n            name: item.name,\n            url: item.url,\n            owned: 0\n          };\n        })),\n        isLoading: false,\n        offset: state.offset + 20,\n        isFetched: true,\n        error: null\n      });\n\n    case STORE_TYPE.GET_ALL_POKEMON_ERROR:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload.message.error // Pokemon details\n\n      });\n\n    case STORE_TYPE.POKEMON_DETAILS_REQUESTING:\n      return _objectSpread({}, state, {\n        selectedPokemon: {\n          forms: [],\n          abilities: [],\n          stats: [],\n          moves: [],\n          sprites: {},\n          held_items: [],\n          species: {},\n          game_indices: [],\n          types: []\n        },\n        isLoading: true,\n        error: null,\n        detailsFetched: false\n      });\n\n    case STORE_TYPE.POKEMON_DETAILS_SUCCESS:\n      let nickname = null;\n      let pokeOwned = null;\n\n      if (action.payload.getFrom === 'list') {\n        let poke = state.pokemonList.find(function (element) {\n          return element.id === \"\".concat(action.payload.id);\n        });\n        if (!poke || poke === undefined) return _objectSpread({}, state, {\n          isLoading: false,\n          error: true,\n          detailsFetched: false\n        });\n        pokeOwned = poke.owned;\n      } else if (action.payload.getFrom === 'owned') {\n        let myPoke = state.myPokemon.find(function (element) {\n          return element.pokeIdx === \"\".concat(action.payload.pokeIdx);\n        });\n        if (myPoke && myPoke !== undefined) nickname = myPoke.nickname;\n      }\n\n      return _objectSpread({}, state, {\n        selectedPokemon: _objectSpread({}, action.payload, {\n          owned: pokeOwned,\n          nickname: nickname\n        }),\n        isLoading: false,\n        detailsFetched: true,\n        error: null\n      });\n\n    case STORE_TYPE.POKEMON_DETAILS_ERROR:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload.message.error // Catch Pokemon\n\n      });\n\n    case STORE_TYPE.START_CATCHING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        isCatched: null,\n        catchedPokeIDX: null\n      });\n\n    case STORE_TYPE.POKEMON_CATCHED:\n      const pokeIndex = state.pokemonList.findIndex(poke => poke.id === \"\".concat(state.selectedPokemon.id));\n      state.pokemonList[pokeIndex].owned = state.pokemonList[pokeIndex].owned + 1;\n      state.selectedPokemon.owned = state.selectedPokemon.owned + 1;\n      return _objectSpread({}, state, {\n        catchedPokeIDX: \"\".concat(state.myPokemon.length + 1),\n        myPokemon: state.myPokemon.concat({\n          pokeIdx: \"\".concat(state.myPokemon.length + 1),\n          id: \"\".concat(state.selectedPokemon.id),\n          name: state.selectedPokemon.name,\n          nickname: '-'\n        }),\n        pokemonList: state.pokemonList,\n        selectedPokemon: state.selectedPokemon,\n        isLoading: false,\n        isCatched: true\n      });\n\n    case STORE_TYPE.CATCHED_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isCatched: false\n      });\n\n    case STORE_TYPE.RESET_CATCH_FAILURE:\n      return _objectSpread({}, state, {\n        isCatched: null // Change Pokemon Nick Name\n\n      });\n\n    case STORE_TYPE.CHANGE_NICK_NAME:\n      state.myPokemon[state.myPokemon.findIndex(poke => poke.pokeIdx === \"\".concat(state.catchedPokeIDX))].nickname = action.payload;\n      return _objectSpread({}, state, {\n        myPokemon: state.myPokemon,\n        isCatched: null,\n        catchedPokeIDX: null\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/store/reducers/pokemon_reducers.js"],"names":["STORE_TYPE","initialState","pokemonList","myPokemon","selectedPokemon","forms","abilities","stats","moves","sprites","held_items","species","game_indices","types","isLoading","offset","error","isFetched","detailsFetched","isCatched","catchedPokeIDX","state","action","type","GET_ALL_POKEMON_REQUESTING","GET_ALL_POKEMON_SUCCESS","concat","payload","results","map","item","id","url","substring","length","name","owned","GET_ALL_POKEMON_ERROR","message","POKEMON_DETAILS_REQUESTING","POKEMON_DETAILS_SUCCESS","nickname","pokeOwned","getFrom","poke","find","element","undefined","myPoke","pokeIdx","POKEMON_DETAILS_ERROR","START_CATCHING","POKEMON_CATCHED","pokeIndex","findIndex","CATCHED_FAILED","RESET_CATCH_FAILURE","CHANGE_NICK_NAME"],"mappings":"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","sourcesContent":["import { STORE_TYPE } from '../../constants';\n\nconst initialState = {\n    pokemonList: [],\n    myPokemon: [],\n    selectedPokemon: {\n        forms: [],\n        abilities: [],\n        stats: [],\n        moves: [],\n        sprites: {},\n        held_items: [],\n        species: {},\n        game_indices: [],\n        types: []\n    },\n    isLoading: false,\n    offset: 0,\n    error: null,\n    isFetched: false,\n    detailsFetched: false,\n    isCatched: null,\n    catchedPokeIDX: null,\n\n}\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case STORE_TYPE.GET_ALL_POKEMON_REQUESTING:\n            return { ...state, isLoading: true, error: null }\n        case STORE_TYPE.GET_ALL_POKEMON_SUCCESS:\n            return {\n                ...state,\n                pokemonList: state.pokemonList.concat(\n                    action.payload.results.map((item) => {\n                        return {\n                            id: item.url.substring(34, item.url.length - 1),\n                            name: item.name,\n                            url: item.url,\n                            owned: 0,\n                        }\n                    })\n                ),\n                isLoading: false,\n                offset: state.offset + 20,\n                isFetched: true,\n                error: null\n            }\n        case STORE_TYPE.GET_ALL_POKEMON_ERROR:\n            return { ...state, isLoading: false, error: action.payload.message.error }\n\n        // Pokemon details\n        case STORE_TYPE.POKEMON_DETAILS_REQUESTING:\n            return {\n                ...state,\n                selectedPokemon: {\n                    forms: [],\n                    abilities: [],\n                    stats: [],\n                    moves: [],\n                    sprites: {},\n                    held_items: [],\n                    species: {},\n                    game_indices: [],\n                    types: []\n                },\n                isLoading: true,\n                error: null,\n                detailsFetched: false,\n            }\n        case STORE_TYPE.POKEMON_DETAILS_SUCCESS:\n            let nickname = null;\n            let pokeOwned = null;\n\n\n            if(action.payload.getFrom === 'list'){\n                let poke = state.pokemonList.find(function (element) {\n                    return element.id === `${action.payload.id}`;\n                });\n                if (!poke || poke === undefined) return { ...state, isLoading: false, error: true, detailsFetched: false }\n                pokeOwned = poke.owned;\n                \n            }\n            else if(action.payload.getFrom === 'owned'){\n                let myPoke = state.myPokemon.find(function (element) {\n                    return element.pokeIdx === `${action.payload.pokeIdx}`\n                });\n                if (myPoke && myPoke !== undefined) nickname = myPoke.nickname;\n                \n                \n            }\n\n            return {\n                ...state,\n                selectedPokemon: { ...action.payload, owned: pokeOwned, nickname:nickname },\n                isLoading: false,\n                detailsFetched: true,\n                error: null\n            }\n\n        case STORE_TYPE.POKEMON_DETAILS_ERROR:\n            return { ...state, isLoading: false, error: action.payload.message.error }\n\n        // Catch Pokemon\n        case STORE_TYPE.START_CATCHING:\n            return { ...state, isLoading: true, isCatched: null, catchedPokeIDX:null }\n        case STORE_TYPE.POKEMON_CATCHED:          \n            const pokeIndex = state.pokemonList.findIndex(poke => poke.id === `${state.selectedPokemon.id}`);\n            state.pokemonList[pokeIndex].owned = state.pokemonList[pokeIndex].owned + 1;\n            state.selectedPokemon.owned = state.selectedPokemon.owned + 1;\n            return {\n                ...state,\n                catchedPokeIDX:`${state.myPokemon.length + 1}`,\n                myPokemon: state.myPokemon.concat(\n                    {\n                        pokeIdx: `${state.myPokemon.length + 1}`,\n                        id: `${state.selectedPokemon.id}`,\n                        name: state.selectedPokemon.name,\n                        nickname: '-'\n                    }),\n                pokemonList: state.pokemonList,\n                selectedPokemon: state.selectedPokemon,\n                isLoading: false,\n                isCatched: true\n            }\n        case STORE_TYPE.CATCHED_FAILED:\n            return { ...state, isLoading: false, isCatched: false }\n\n        case STORE_TYPE.RESET_CATCH_FAILURE:\n            return { ...state, isCatched: null }\n        \n        // Change Pokemon Nick Name\n        case STORE_TYPE.CHANGE_NICK_NAME:\n            state.myPokemon[state.myPokemon.findIndex(poke => poke.pokeIdx === `${state.catchedPokeIDX}`)].nickname = action.payload;\n            return {\n                ...state,\n                myPokemon: state.myPokemon,\n                isCatched: null,\n                catchedPokeIDX: null\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}