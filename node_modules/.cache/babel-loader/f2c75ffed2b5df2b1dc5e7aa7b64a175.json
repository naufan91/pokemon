{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/pokemonList/pokemonList.js\";\nimport React, { Component } from 'react';\nimport { Button, Wrapper, ListItem } from '../../components';\n\nclass PokemonList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showPokemonAll = data => data ? data.map((item, idx) => React.createElement(\"div\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      name: item.name,\n      owned: item.owned,\n      id: item.id,\n      from: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"No Data\");\n  }\n\n  componentDidMount() {\n    if (!this.props.pokemon.isFetched) {\n      return this.props.getPokemonList();\n    }\n  }\n\n  render() {\n    const _this$props$pokemon = this.props.pokemon,\n          isLoading = _this$props$pokemon.isLoading,\n          isFetched = _this$props$pokemon.isFetched,\n          pokemonList = _this$props$pokemon.pokemonList;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, isLoading && !isFetched ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Loading...\") : this.showPokemonAll(pokemonList)), React.createElement(Button, {\n      onClick: () => this.props.getPokemonList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Load More\"));\n  }\n\n}\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/pokemonList/pokemonList.js"],"names":["React","Component","Button","Wrapper","ListItem","PokemonList","showPokemonAll","data","map","item","idx","name","owned","id","componentDidMount","props","pokemon","isFetched","getPokemonList","render","isLoading","pokemonList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,QAA1B,QAA0C,kBAA1C;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAQhCK,cARgC,GAQdC,IAAD,IACbA,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAU,CAACC,IAAD,EAAOC,GAAP,KACb;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAED,IAAI,CAACE,IADf;AAEI,MAAA,KAAK,EAAEF,IAAI,CAACG,KAFhB;AAGI,MAAA,EAAE,EAAEH,IAAI,CAACI,EAHb;AAII,MAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADG,CAAH,GAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnB2B;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAE;AACf,QAAG,CAAC,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,SAAvB,EAAiC;AAC7B,aAAO,KAAKF,KAAL,CAAWG,cAAX,EAAP;AACH;AACJ;;AAgBDC,EAAAA,MAAM,GAAE;AAAA,gCAC0C,KAAKJ,KAAL,CAAWC,OADrD;AAAA,UACII,SADJ,uBACIA,SADJ;AAAA,UACeH,SADf,uBACeA,SADf;AAAA,UAC0BI,WAD1B,uBAC0BA,WAD1B;AAEJ,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,SAAS,IAAI,CAACH,SAAd,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,GAA8C,KAAKX,cAAL,CAAoBe,WAApB,CADnD,CADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWG,cAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ;AAQH;;AAhC+B;;AAoCpC,eAAeb,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Wrapper, ListItem } from '../../components'\n\nclass PokemonList extends Component {\n\n    componentDidMount(){\n        if(!this.props.pokemon.isFetched){\n            return this.props.getPokemonList();\n        }        \n    }\n\n    showPokemonAll = (data) => (\n        data ? data.map( (item, idx) => (\n            <div key={idx}>\n                <ListItem\n                    name={item.name}\n                    owned={item.owned}\n                    id={item.id}\n                    from='list'\n                />\n            </div>\n          ))\n        :<p>No Data</p>\n    )\n\n    render(){\n        const { isLoading, isFetched, pokemonList } = this.props.pokemon;\n        return (\n            <Wrapper>\n                <div className=\"list-wrapper\">\n                    {isLoading && !isFetched ? <p>Loading...</p> : this.showPokemonAll(pokemonList)}\n                </div>\n                <Button onClick={() => this.props.getPokemonList()}>Load More</Button>\n            </Wrapper>\n        )\n    }\n\n}\n\nexport default PokemonList;"]},"metadata":{},"sourceType":"module"}