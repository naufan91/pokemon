{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/pokemonDetails/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonDetails extends Component {\n  componentDidMount() {\n    if (!this.props.isFetched) {\n      this.props.getPokemonList().then(() => {\n        return this.props.getPokemonDetails(this.props.match.params.id);\n      });\n    }\n\n    return this.props.getPokemonDetails(this.props.match.params.id);\n  }\n\n  render() {\n    const _this$props = this.props,\n          pokemon = _this$props.pokemon,\n          isLoading = _this$props.isLoading,\n          detailsFetched = _this$props.detailsFetched,\n          error = _this$props.error;\n    return React.createElement(PokemonCard, Object.assign({\n      isLoading: isLoading,\n      failed: error,\n      isFetched: detailsFetched\n    }, pokemon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  pokemon: state.pokemon.selectedPokemon,\n  isLoading: state.pokemon.isLoading,\n  detailsFetched: state.pokemon.detailsFetched,\n  error: state.pokemon.error,\n  isFetched: state.pokemon.isFetched\n});\n\nconst mapDispatchToProps = {\n  getPokemonDetails,\n  getPokemonList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PokemonDetails));","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/pokemonDetails/index.js"],"names":["React","Component","withRouter","PokemonCard","getPokemonDetails","getPokemonList","connect","PokemonDetails","componentDidMount","props","isFetched","then","match","params","id","render","pokemon","isLoading","detailsFetched","error","mapStateToProps","state","selectedPokemon","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,qBAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACnCO,EAAAA,iBAAiB,GAAG;AAChB,QAAG,CAAC,KAAKC,KAAL,CAAWC,SAAf,EAAyB;AACrB,WAAKD,KAAL,CAAWJ,cAAX,GAA4BM,IAA5B,CAAiC,MAAI;AACjC,eAAO,KAAKF,KAAL,CAAWL,iBAAX,CAA6B,KAAKK,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAArD,CAAP;AACH,OAFD;AAGH;;AACD,WAAO,KAAKL,KAAL,CAAWL,iBAAX,CAA6B,KAAKK,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAArD,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACiD,KAAKN,KADtD;AAAA,UACGO,OADH,eACGA,OADH;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,cADvB,eACuBA,cADvB;AAAA,UACuCC,KADvC,eACuCA,KADvC;AAEL,WACI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAGF,SADhB;AAEI,MAAA,MAAM,EAAGE,KAFb;AAGI,MAAA,SAAS,EAAID;AAHjB,OAIQF,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAOH;;AAnBkC;;AAsBvC,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcM,eADS;AAEhCL,EAAAA,SAAS,EAAEI,KAAK,CAACL,OAAN,CAAcC,SAFO;AAGhCC,EAAAA,cAAc,EAAEG,KAAK,CAACL,OAAN,CAAcE,cAHE;AAIhCC,EAAAA,KAAK,EAAEE,KAAK,CAACL,OAAN,CAAcG,KAJW;AAKhCT,EAAAA,SAAS,EAAEW,KAAK,CAACL,OAAN,CAAcN;AALO,CAAZ,CAAxB;;AAQA,MAAMa,kBAAkB,GAAG;AACvBnB,EAAAA,iBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeC,OAAO,CAACc,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CrB,UAAU,CAACK,cAAD,CAAtD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonDetails extends Component {\n    componentDidMount() {\n        if(!this.props.isFetched){\n            this.props.getPokemonList().then(()=>{\n                return this.props.getPokemonDetails(this.props.match.params.id)\n            });\n        } \n        return this.props.getPokemonDetails(this.props.match.params.id);\n    }\n\n    render() {\n        const { pokemon, isLoading, detailsFetched, error } = this.props;\n        return (\n            <PokemonCard \n                isLoading ={isLoading}\n                failed ={error}\n                isFetched = {detailsFetched}\n                {...pokemon}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    pokemon: state.pokemon.selectedPokemon,\n    isLoading: state.pokemon.isLoading,\n    detailsFetched: state.pokemon.detailsFetched,\n    error: state.pokemon.error,\n    isFetched: state.pokemon.isFetched\n})  \n\nconst mapDispatchToProps = {\n    getPokemonDetails,\n    getPokemonList\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(PokemonDetails))"]},"metadata":{},"sourceType":"module"}