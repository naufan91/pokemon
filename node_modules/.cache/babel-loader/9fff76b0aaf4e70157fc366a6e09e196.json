{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/pokemonDetails/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonDetails extends Component {\n  componentDidMount() {\n    const _this$props$match$par = this.props.match.params,\n          id = _this$props$match$par.id,\n          from = _this$props$match$par.from,\n          idx = _this$props$match$par.idx;\n\n    if (!this.props.isFetched) {\n      this.props.getPokemonList().then(() => {\n        return this.props.getPokemonDetails(id, from, idx);\n      });\n    }\n\n    return this.props.getPokemonDetails(id, from, idx);\n  }\n\n  render() {\n    const _this$props = this.props,\n          pokemon = _this$props.pokemon,\n          isLoading = _this$props.isLoading,\n          detailsFetched = _this$props.detailsFetched,\n          error = _this$props.error;\n    const from = this.props.match.params.from;\n    console.log(detailsFetched);\n    return React.createElement(PokemonCard, Object.assign({\n      isLoading: isLoading,\n      failed: error,\n      isLoaded: detailsFetched,\n      useCatch: from === 'owned' ? false : true\n    }, pokemon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  pokemon: state.pokemon.selectedPokemon,\n  isLoading: state.pokemon.isLoading,\n  detailsFetched: state.pokemon.detailsFetched,\n  error: state.pokemon.error,\n  isFetched: state.pokemon.isFetched\n});\n\nconst mapDispatchToProps = {\n  getPokemonDetails,\n  getPokemonList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PokemonDetails));","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/pokemonDetails/index.js"],"names":["React","Component","withRouter","PokemonCard","getPokemonDetails","getPokemonList","connect","PokemonDetails","componentDidMount","props","match","params","id","from","idx","isFetched","then","render","pokemon","isLoading","detailsFetched","error","console","log","mapStateToProps","state","selectedPokemon","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,qBAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACnCO,EAAAA,iBAAiB,GAAG;AAAA,kCACQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADzB;AAAA,UACRC,EADQ,yBACRA,EADQ;AAAA,UACLC,IADK,yBACLA,IADK;AAAA,UACAC,GADA,yBACAA,GADA;;AAEhB,QAAG,CAAC,KAAKL,KAAL,CAAWM,SAAf,EAAyB;AACrB,WAAKN,KAAL,CAAWJ,cAAX,GAA4BW,IAA5B,CAAiC,MAAI;AACjC,eAAO,KAAKP,KAAL,CAAWL,iBAAX,CAA6BQ,EAA7B,EAAgCC,IAAhC,EAAqCC,GAArC,CAAP;AACH,OAFD;AAGH;;AACD,WAAO,KAAKL,KAAL,CAAWL,iBAAX,CAA6BQ,EAA7B,EAAgCC,IAAhC,EAAqCC,GAArC,CAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBACiD,KAAKR,KADtD;AAAA,UACGS,OADH,eACGA,OADH;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,cADvB,eACuBA,cADvB;AAAA,UACuCC,KADvC,eACuCA,KADvC;AAAA,UAEGR,IAFH,GAEY,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,MAF7B,CAEGE,IAFH;AAGLS,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,WACI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAGD,SADhB;AAEI,MAAA,MAAM,EAAGE,KAFb;AAGI,MAAA,QAAQ,EAAID,cAHhB;AAII,MAAA,QAAQ,EAAIP,IAAI,KAAK,OAAT,GAAiB,KAAjB,GAAuB;AAJvC,OAKQK,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAQH;;AAvBkC;;AA0BvC,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,CAAcQ,eADS;AAEhCP,EAAAA,SAAS,EAAEM,KAAK,CAACP,OAAN,CAAcC,SAFO;AAGhCC,EAAAA,cAAc,EAAEK,KAAK,CAACP,OAAN,CAAcE,cAHE;AAIhCC,EAAAA,KAAK,EAAEI,KAAK,CAACP,OAAN,CAAcG,KAJW;AAKhCN,EAAAA,SAAS,EAAEU,KAAK,CAACP,OAAN,CAAcH;AALO,CAAZ,CAAxB;;AAQA,MAAMY,kBAAkB,GAAG;AACvBvB,EAAAA,iBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeC,OAAO,CAACkB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CzB,UAAU,CAACK,cAAD,CAAtD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PokemonCard } from '../../components/organisms';\nimport { getPokemonDetails, getPokemonList } from '../../store/actions';\nimport { connect } from 'react-redux';\n\nclass PokemonDetails extends Component {\n    componentDidMount() {\n        const { id,from,idx } = this.props.match.params\n        if(!this.props.isFetched){\n            this.props.getPokemonList().then(()=>{\n                return this.props.getPokemonDetails(id,from,idx)\n            });\n        } \n        return this.props.getPokemonDetails(id,from,idx);\n    }\n\n    render() {\n        const { pokemon, isLoading, detailsFetched, error } = this.props;\n        const { from } = this.props.match.params;\n        console.log(detailsFetched);\n        return (\n            <PokemonCard \n                isLoading ={isLoading}\n                failed ={error}\n                isLoaded = {detailsFetched}\n                useCatch = {from === 'owned'?false:true}\n                {...pokemon}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    pokemon: state.pokemon.selectedPokemon,\n    isLoading: state.pokemon.isLoading,\n    detailsFetched: state.pokemon.detailsFetched,\n    error: state.pokemon.error,\n    isFetched: state.pokemon.isFetched\n})  \n\nconst mapDispatchToProps = {\n    getPokemonDetails,\n    getPokemonList\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(PokemonDetails))"]},"metadata":{},"sourceType":"module"}