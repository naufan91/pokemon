{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/catchPokemon/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { catchPokemon, resetCatchFailure, changePokemonNickName } from '../../store/actions';\nimport { BtnCatch } from '../../components/organisms';\n\nclass CatchPokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nickName: ''\n    };\n\n    this.onTyping = event => {\n      this.setState({\n        nickName: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nickName: this.props.pokemon.name\n    });\n  }\n\n  render() {\n    const nickName = this.state.nickName;\n    return React.createElement(BtnCatch, {\n      onClick: this.props.catchPokemon(),\n      onSubmit: this.props.changePokemonNickName(nickName),\n      catchSuccess: this.props.isCatched,\n      value: nickName,\n      onChange: event => this.onTyping(event),\n      onClose: this.props.resetCatchFailure(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  pokemon: state.pokemon.selectedPokemon,\n  isCatched: state.pokemon.isCatched\n});\n\nconst mapDispatchToProps = {\n  catchPokemon,\n  resetCatchFailure,\n  changePokemonNickName\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CatchPokemon);","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/catchPokemon/index.js"],"names":["React","Component","connect","catchPokemon","resetCatchFailure","changePokemonNickName","BtnCatch","CatchPokemon","state","nickName","onTyping","event","setState","target","value","componentDidMount","props","pokemon","name","render","isCatched","mapStateToProps","selectedPokemon","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,qBAA1C,QAAuE,qBAAvE;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GAC1B;AACHC,MAAAA,QAAQ,EAAE;AADP,KAD0B;;AAAA,SAWjCC,QAXiC,GAWrBC,KAAD,IAAS;AAChB,WAAKC,QAAL,CAAc;AAACH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,KAbgC;AAAA;;AAKjCC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,QAAL,CAAc;AACVH,MAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWC,OAAX,CAAmBC;AADnB,KAAd;AAGH;;AAMDC,EAAAA,MAAM,GAAE;AAAA,UACIV,QADJ,GACiB,KAAKD,KADtB,CACIC,QADJ;AAEJ,WACI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWb,YAAX,EADb;AAEI,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWX,qBAAX,CAAiCI,QAAjC,CAFd;AAGI,MAAA,YAAY,EAAE,KAAKO,KAAL,CAAWI,SAH7B;AAII,MAAA,KAAK,EAAEX,QAJX;AAKI,MAAA,QAAQ,EAAGE,KAAD,IAAS,KAAKD,QAAL,CAAcC,KAAd,CALvB;AAMI,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWZ,iBAAX,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AA1BgC;;AA6BrC,MAAMiB,eAAe,GAAIb,KAAD,KAAU;AAC9BS,EAAAA,OAAO,EAAET,KAAK,CAACS,OAAN,CAAcK,eADO;AAE9BF,EAAAA,SAAS,EAAEZ,KAAK,CAACS,OAAN,CAAcG;AAFK,CAAV,CAAxB;;AAKA,MAAMG,kBAAkB,GAAG;AACvBpB,EAAAA,YADuB;AAEvBC,EAAAA,iBAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAOA,eAAeH,OAAO,CAACmB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { catchPokemon, resetCatchFailure, changePokemonNickName } from '../../store/actions'\nimport { BtnCatch } from '../../components/organisms';\n\nclass CatchPokemon extends Component {\n    state ={\n        nickName: '',\n    }\n\n    componentDidMount(){\n        this.setState({\n            nickName: this.props.pokemon.name\n        })     \n    }\n\n    onTyping = (event)=>{\n        this.setState({nickName: event.target.value})\n    }\n\n    render(){\n        const { nickName } = this.state;\n        return (\n            <BtnCatch \n                onClick={this.props.catchPokemon()} \n                onSubmit={this.props.changePokemonNickName(nickName)} \n                catchSuccess={this.props.isCatched} \n                value={nickName} \n                onChange={(event)=>this.onTyping(event)}\n                onClose={this.props.resetCatchFailure()}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    pokemon: state.pokemon.selectedPokemon,\n    isCatched: state.pokemon.isCatched\n})  \n\nconst mapDispatchToProps = {\n    catchPokemon,\n    resetCatchFailure,\n    changePokemonNickName\n\n} \n\nexport default connect(mapStateToProps,mapDispatchToProps)(CatchPokemon);"]},"metadata":{},"sourceType":"module"}