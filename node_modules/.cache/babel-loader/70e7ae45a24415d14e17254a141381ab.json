{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/components/atoms/Text/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './text.css';\n\nconst Text = props => {\n  const children = props.children,\n        header = props.header,\n        headerMain = props.headerMain,\n        center = props.center,\n        italic = props.italic,\n        withSpacing = props.withSpacing,\n        small = props.small,\n        style = props.style;\n  const styleClass = classNames('text', {\n    'text-header': header,\n    'text-header-main': headerMain,\n    'text-center': center,\n    'text-italic': italic,\n    'text-with-spacing': withSpacing\n  });\n\n  if (small) {\n    return React.createElement(\"small\", {\n      className: styleClass,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, children);\n  }\n\n  return React.createElement(\"p\", {\n    className: styleClass,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, children);\n};\n\nText.propTypes = {\n  children: PropTypes.any,\n  style: PropTypes.array,\n  small: PropTypes.bool,\n  header: PropTypes.bool,\n  headerMain: PropTypes.bool,\n  center: PropTypes.bool,\n  italic: PropTypes.bool,\n  withSpacing: PropTypes.bool\n};\nText.defaultProps = {\n  small: false,\n  header: false,\n  headerMain: false,\n  center: false,\n  italic: false,\n  withSpacing: false\n};\nexport default Text;","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/components/atoms/Text/index.js"],"names":["React","PropTypes","classNames","Text","props","children","header","headerMain","center","italic","withSpacing","small","style","styleClass","propTypes","any","array","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA,QACZC,QADY,GAC+DD,KAD/D,CACZC,QADY;AAAA,QACFC,MADE,GAC+DF,KAD/D,CACFE,MADE;AAAA,QACMC,UADN,GAC+DH,KAD/D,CACMG,UADN;AAAA,QACkBC,MADlB,GAC+DJ,KAD/D,CACkBI,MADlB;AAAA,QAC0BC,MAD1B,GAC+DL,KAD/D,CAC0BK,MAD1B;AAAA,QACkCC,WADlC,GAC+DN,KAD/D,CACkCM,WADlC;AAAA,QAC+CC,KAD/C,GAC+DP,KAD/D,CAC+CO,KAD/C;AAAA,QACsDC,KADtD,GAC+DR,KAD/D,CACsDQ,KADtD;AAGpB,QAAMC,UAAU,GAAGX,UAAU,CAAC,MAAD,EAAS;AAClC,mBAAeI,MADmB;AAElC,wBAAoBC,UAFc;AAGlC,mBAAeC,MAHmB;AAIlC,mBAAeC,MAJmB;AAKlC,yBAAqBC;AALa,GAAT,CAA7B;;AAQA,MAAGC,KAAH,EAAS;AACL,WAAO;AAAO,MAAA,SAAS,EAAEE,UAAlB;AAA8B,MAAA,KAAK,EAAED,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CP,QAA7C,CAAP;AACH;;AACD,SAAS;AAAG,IAAA,SAAS,EAAEQ,UAAd;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCP,QAAzC,CAAT;AACH,CAfD;;AAiBAF,IAAI,CAACW,SAAL,GAAiB;AACbT,EAAAA,QAAQ,EAAGJ,SAAS,CAACc,GADR;AAEbH,EAAAA,KAAK,EAAEX,SAAS,CAACe,KAFJ;AAGbL,EAAAA,KAAK,EAAEV,SAAS,CAACgB,IAHJ;AAIbX,EAAAA,MAAM,EAAEL,SAAS,CAACgB,IAJL;AAKbV,EAAAA,UAAU,EAAEN,SAAS,CAACgB,IALT;AAMbT,EAAAA,MAAM,EAAEP,SAAS,CAACgB,IANL;AAObR,EAAAA,MAAM,EAAER,SAAS,CAACgB,IAPL;AAQbP,EAAAA,WAAW,EAAET,SAAS,CAACgB;AARV,CAAjB;AAWAd,IAAI,CAACe,YAAL,GAAmB;AACfP,EAAAA,KAAK,EAAC,KADS;AAEfL,EAAAA,MAAM,EAAE,KAFO;AAGfC,EAAAA,UAAU,EAAE,KAHG;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,MAAM,EAAE,KALO;AAMfC,EAAAA,WAAW,EAAE;AANE,CAAnB;AASA,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './text.css';\n\nconst Text = (props) => {\n    const { children, header, headerMain, center, italic, withSpacing, small, style} = props;\n\n    const styleClass = classNames('text', {\n        'text-header': header,\n        'text-header-main': headerMain,\n        'text-center': center,\n        'text-italic': italic,\n        'text-with-spacing': withSpacing,\n    })\n\n    if(small){\n        return <small className={styleClass} style={style}>{children}</small>\n    }\n    return ( <p className={styleClass} style={style}>{children}</p>)\n}\n\nText.propTypes = {\n    children : PropTypes.any,\n    style: PropTypes.array,\n    small: PropTypes.bool,\n    header: PropTypes.bool,\n    headerMain: PropTypes.bool,\n    center: PropTypes.bool,\n    italic: PropTypes.bool,\n    withSpacing: PropTypes.bool,\n}\n\nText.defaultProps ={\n    small:false,\n    header: false,\n    headerMain: false,\n    center: false,\n    italic: false,\n    withSpacing: false\n}\n\nexport default Text;"]},"metadata":{},"sourceType":"module"}