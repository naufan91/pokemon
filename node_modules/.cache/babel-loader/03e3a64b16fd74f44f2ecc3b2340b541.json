{"ast":null,"code":"var _jsxFileName = \"/Users/naufanharish/react/pokemon/src/containers/myPokemonList/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ListItem } from '../../components/organisms';\n\nclass MyPokemonList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemonData: [],\n      start: 0,\n      offsets: 20\n    };\n\n    this.loadData = () => {\n      const myPokemon = this.props.myPokemon;\n      const _this$state = this.state,\n            start = _this$state.start,\n            offsets = _this$state.offsets,\n            pokemonData = _this$state.pokemonData;\n      const newArr = myPokemon.slice(start, offsets);\n\n      if (newArr.length !== 0) {\n        this.setState({\n          pokemonData: this.state.pokemonData.concat(newArr),\n          start: newArr.length + pokemonData.length,\n          offsets: newArr.length + pokemonData.length + 20\n        });\n      }\n    };\n\n    this.renderData = pokemonData;\n  }\n\n  componentDidMount() {\n    return this.loadData();\n  }\n\n  render() {\n    const pokemonData = this.state.pokemonData;\n    return React.createElement(ListItem, {\n      from: \"owned\",\n      failed: false,\n      isLoading: loading,\n      list: pokemonData,\n      loadMore: () => this.loadData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  myPokemon: state.pokemon.myPokemon,\n  isLoading: state.pokemon.isLoading\n});\n\nexport default connect(mapStateToProps)(MyPokemonList);","map":{"version":3,"sources":["/Users/naufanharish/react/pokemon/src/containers/myPokemonList/index.js"],"names":["React","Component","connect","ListItem","MyPokemonList","state","pokemonData","start","offsets","loadData","myPokemon","props","newArr","slice","length","setState","concat","renderData","componentDidMount","render","loading","mapStateToProps","pokemon","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD0B;;AAAA,SAUlCC,QAVkC,GAUvB,MAAK;AAAA,YACJC,SADI,GACU,KAAKC,KADf,CACJD,SADI;AAAA,0BAE0B,KAAKL,KAF/B;AAAA,YAELE,KAFK,eAELA,KAFK;AAAA,YAEEC,OAFF,eAEEA,OAFF;AAAA,YAEWF,WAFX,eAEWA,WAFX;AAIZ,YAAMM,MAAM,GAAGF,SAAS,CAACG,KAAV,CAAgBN,KAAhB,EAAuBC,OAAvB,CAAf;;AACA,UAAGI,MAAM,CAACE,MAAP,KAAkB,CAArB,EAAuB;AACnB,aAAKC,QAAL,CAAc;AACVT,UAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAX,CAAuBU,MAAvB,CAA8BJ,MAA9B,CADH;AAEVL,UAAAA,KAAK,EAAEK,MAAM,CAACE,MAAP,GAAgBR,WAAW,CAACQ,MAFzB;AAGVN,UAAAA,OAAO,EAAEI,MAAM,CAACE,MAAP,GAAgBR,WAAW,CAACQ,MAA5B,GAAqC;AAHpC,SAAd;AAKH;AACJ,KAtBiC;;AAAA,SAwBlCG,UAxBkC,GAwBpBX,WAxBoB;AAAA;;AAMlCY,EAAAA,iBAAiB,GAAE;AACf,WAAO,KAAKT,QAAL,EAAP;AACH;;AAkBDU,EAAAA,MAAM,GAAE;AAAA,UACIb,WADJ,GACoB,KAAKD,KADzB,CACIC,WADJ;AAGJ,WACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,MAAM,EAAE,KAFZ;AAGI,MAAA,SAAS,EAAEc,OAHf;AAII,MAAA,IAAI,EAAEd,WAJV;AAKI,MAAA,QAAQ,EAAE,MAAM,KAAKG,QAAL,EALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AArCiC;;AAyCtC,MAAMY,eAAe,GAAIhB,KAAD,KAAU;AAChCK,EAAAA,SAAS,EAAEL,KAAK,CAACiB,OAAN,CAAcZ,SADO;AAEhCa,EAAAA,SAAS,EAAElB,KAAK,CAACiB,OAAN,CAAcC;AAFO,CAAV,CAAxB;;AAKA,eAAerB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,aAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport { ListItem } from '../../components/organisms';\n\nclass MyPokemonList extends Component {\n    state = {\n        pokemonData: [],\n        start: 0,\n        offsets: 20\n    }\n    componentDidMount(){\n        return this.loadData();        \n    }\n\n    loadData = () =>{\n        const { myPokemon } = this.props;\n        const {start, offsets, pokemonData} = this.state;\n        \n        const newArr = myPokemon.slice(start, offsets)\n        if(newArr.length !== 0){\n            this.setState({\n                pokemonData: this.state.pokemonData.concat(newArr),\n                start: newArr.length + pokemonData.length,\n                offsets: newArr.length + pokemonData.length + 20\n            })  \n        }\n    }\n\n    renderData = (pokemonData)\n\n    render(){\n        const { pokemonData } = this.state;\n        \n        return (\n            <ListItem \n                from=\"owned\"\n                failed={false} \n                isLoading={loading}\n                list={pokemonData}\n                loadMore={() => this.loadData()}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state)=>({\n  myPokemon: state.pokemon.myPokemon,\n  isLoading: state.pokemon.isLoading,\n}) \n  \nexport default connect(mapStateToProps)(MyPokemonList)"]},"metadata":{},"sourceType":"module"}